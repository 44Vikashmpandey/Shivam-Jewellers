import{u as R,c as y,b as S,d as C}from"./ThemeProvider-Dst3eTQR.js";import{r as x,j as $,g as w}from"./index-Bjc78XoC.js";const E=x.forwardRef(({bsPrefix:o,fluid:r=!1,as:c="div",className:e,...t},s)=>{const a=R(o,"container"),u=typeof r=="string"?`-${r}`:"-fluid";return $.jsx(c,{ref:s,...t,className:y(e,r?`${a}${u}`:a)})});E.displayName="Container";var h={exports:{}},d,v;function P(){if(v)return d;v=1;var o="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";return d=o,d}var T,g;function j(){if(g)return T;g=1;var o=P();function r(){}function c(){}return c.resetWarningCache=r,T=function(){function e(a,u,f,l,n,i){if(i!==o){var p=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw p.name="Invariant Violation",p}}e.isRequired=e;function t(){return e}var s={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:c,resetWarningCache:r};return s.PropTypes=s,s},T}var N;function _(){return N||(N=1,h.exports=j()()),h.exports}var B=_();const k=w(B);function O({as:o,bsPrefix:r,className:c,...e}){r=R(r,"col");const t=S(),s=C(),a=[],u=[];return t.forEach(f=>{const l=e[f];delete e[f];let n,i,p;typeof l=="object"&&l!=null?{span:n,offset:i,order:p}=l:n=l;const m=f!==s?`-${f}`:"";n&&a.push(n===!0?`${r}${m}`:`${r}${m}-${n}`),p!=null&&u.push(`order${m}-${p}`),i!=null&&u.push(`offset${m}-${i}`)}),[{...e,className:y(c,...a,...u)},{as:o,bsPrefix:r,spans:a}]}const q=x.forwardRef((o,r)=>{const[{className:c,...e},{as:t="div",bsPrefix:s,spans:a}]=O(o);return $.jsx(t,{...e,ref:r,className:y(c,!a.length&&s)})});q.displayName="Col";const F=x.forwardRef(({bsPrefix:o,className:r,as:c="div",...e},t)=>{const s=R(o,"row"),a=S(),u=C(),f=`${s}-cols`,l=[];return a.forEach(n=>{const i=e[n];delete e[n];let p;i!=null&&typeof i=="object"?{cols:p}=i:p=i;const m=n!==u?`-${n}`:"";p!=null&&l.push(`${f}${m}-${p}`)}),$.jsx(c,{ref:t,...e,className:y(r,s,...l)})});F.displayName="Row";export{E as C,k as P,F as R,q as a};
